<controls:MetroWindow x:Class="Atomix.Client.Wpf.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:views="clr-namespace:Atomix.Client.Wpf.Views"
        xmlns:viewModels="clr-namespace:Atomix.Client.Wpf.ViewModels"
        mc:Ignorable="d"
        Title="atomix"
        Width="1000"
        Height="800"
        Icon="pack://application:,,,/Atomix.Client.Wpf;component/Resources/Images/logo.png"
        Style="{StaticResource MainWindowStyle}"
        d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel, IsDesignTimeCreatable=True}">
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Command="{Binding LockCommand}"
                    Visibility="{Binding HasAccount, Converter={StaticResource bool2VisibilityConverter}}">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconModern Margin="0 0 3 0"
                                              Width="16"
                                              Height="16"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center">
                        <iconPacks:PackIconModern.Style>
                            <Style TargetType="iconPacks:PackIconModern">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsLocked}" Value="True">
                                        <Setter Property="Kind" Value="Lock"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsLocked}" Value="False">
                                        <Setter Property="Kind" Value="Unlock"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iconPacks:PackIconModern.Style>
                    </iconPacks:PackIconModern>
                    <TextBlock VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsLocked}" Value="True">
                                        <Setter Property="Text" Value="Locked"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsLocked}" Value="False">
                                        <Setter Property="Text" Value="Unlocked"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </Button>
            <Button Command="{Binding SignOutCommand}"
                    Visibility="{Binding HasAccount, Converter={StaticResource bool2VisibilityConverter}}">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterial Margin="0 0 3 0"
                                                Width="16"
                                                Height="16"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Kind="Logout"/>
                    <TextBlock VerticalAlignment="Center"
                               Text="SignOut"/>
                </StackPanel>
            </Button>
            <!--<Button Command="{Binding AuthCommand}"
                    Visibility="{Binding IsConnected, Converter={StaticResource bool2VisibilityConverter}}">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconEntypo Margin="0 0 3 0"
                                              Kind="User"
                                              Width="16"
                                              Height="16"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center">
                        <iconPacks:PackIconEntypo.Style>
                            <Style TargetType="iconPacks:PackIconEntypo">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAuthenticated}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsAuthenticated}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iconPacks:PackIconEntypo.Style>
                    </iconPacks:PackIconEntypo>
                    <iconPacks:PackIconFontAwesome Margin="0 0 3 0"
                                                   Kind="UserSecretSolid"
                                                   Width="16"
                                                   Height="16"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center">
                        <iconPacks:PackIconFontAwesome.Style>
                            <Style TargetType="iconPacks:PackIconFontAwesome">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAuthenticated}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsAuthenticated}" Value="False">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iconPacks:PackIconFontAwesome.Style>
                    </iconPacks:PackIconFontAwesome>
                    <TextBlock VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAuthenticated}" Value="True">
                                        <Setter Property="Text" Value="{Binding Login}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsAuthenticated}" Value="False">
                                        <Setter Property="Text" Value="Anonymous"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </Button>-->
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom"
                   Background="{StaticResource MainWindowTitleBrush}">
            <StatusBarItem DockPanel.Dock="Right">
                <TextBlock Text="Exchange"
                           FontSize="11">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsExchangeConnected}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarConnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Connected"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsExchangeConnected}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarDisconnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Disconnected"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StatusBarItem>
            <Separator DockPanel.Dock="Right"/>
            <StatusBarItem DockPanel.Dock="Right">
                <TextBlock Text="Market Data"
                           FontSize="11">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMarketDataConnected}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarConnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Connected"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsMarketDataConnected}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarDisconnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Disconnected"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StatusBarItem>
            <Separator DockPanel.Dock="Right"/>
            <StatusBarItem DockPanel.Dock="Right">
                <TextBlock Text="Swap"
                           FontSize="11">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSwapConnected}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarConnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Connected"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSwapConnected}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarDisconnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Disconnected"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StatusBarItem>
            <Separator DockPanel.Dock="Right"/>
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Text="Rates Provider"
                           FontSize="11">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsQuotesProviderAvailable}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarConnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Available"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsQuotesProviderAvailable}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarDisconnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Not available"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>
        <views:NavigationView Visibility="{Binding HasAccount, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </DockPanel>
</controls:MetroWindow>