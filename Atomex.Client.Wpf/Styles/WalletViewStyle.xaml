<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Atomex.Client.Wpf.Controls"
                    xmlns:viewModels="clr-namespace:Atomex.Client.Wpf.ViewModels.TransactionViewModels"
                    xmlns:subViews="clr-namespace:Atomex.Client.Wpf.Views.SubViews">

    <Color x:Key="UnknownColor">#515973</Color>
    <Color x:Key="PendingColor">#515973</Color>
    <Color x:Key="ConfirmedColor">#4b79bb</Color>
    <Color x:Key="UnconfirmedColor">#29456d</Color>
    <Color x:Key="FailedColor">#e42552</Color>

    <SolidColorBrush x:Key="UnknownBrush" Color="{StaticResource UnknownColor}"/>
    <SolidColorBrush x:Key="PendingBrush" Color="{StaticResource PendingColor}"/>
    <SolidColorBrush x:Key="ConfirmedBrush" Color="{StaticResource ConfirmedColor}"/>
    <SolidColorBrush x:Key="UnconfirmedBrush" Color="{StaticResource UnconfirmedColor}"/>
    <SolidColorBrush x:Key="FailedBrush" Color="{StaticResource FailedColor}"/>

    <SolidColorBrush x:Key="BalanceBackgroundBrush" Color="White"/>
    <SolidColorBrush x:Key="UsdBalanceBackgroundBrush" Color="Gray"/>
    <SolidColorBrush x:Key="ExplorerLinkButtonForegroundBrush" Color="#6BBAFF"/>
    <SolidColorBrush x:Key="ExplorerLinkButtonMouseOverBrush" Color="#CFE4F7"/>

    <Style x:Key="ExplorerLinkButton" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="12"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock>
                        <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource ExplorerLinkButtonForegroundBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ExplorerLinkButtonMouseOverBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="SentTemplate">
        <Image Width="24"
               Height="24"
               Source="pack://application:,,,/Atomex.Client.Wpf;component/Resources/Images/sent.png"/>
    </DataTemplate>

    <DataTemplate x:Key="ReceivedTemplate">
        <Image Width="24"
               Height="24"
               Source="pack://application:,,,/Atomex.Client.Wpf;component/Resources/Images/received.png"/>
    </DataTemplate>

    <DataTemplate x:Key="SwapPaymentTemplate">
        <Image Width="24"
               Height="24"
               Source="pack://application:,,,/Atomex.Client.Wpf;component/Resources/Images/exchanged.png"/>
    </DataTemplate>

    <DataTemplate x:Key="SwapRefundTemplate">
        <Image Width="24"
               Height="24"
               Source="pack://application:,,,/Atomex.Client.Wpf;component/Resources/Images/refunded.png"/>
    </DataTemplate>

    <DataTemplate x:Key="SwapRedeemTemplate">
        <Image Width="24"
               Height="24"
               Source="pack://application:,,,/Atomex.Client.Wpf;component/Resources/Images/refunded.png"/>
    </DataTemplate>

    <DataTemplate x:Key="UnknownTemplate">
        <Image Width="24"
               Height="24"
               Source="pack://application:,,,/Atomex.Client.Wpf;component/Resources/Images/unknown.png"/>
    </DataTemplate>

    <controls:TransactionDataTemplateSelector x:Key="TransactionTypeDataTemplateSelector"
        UnknownTemplate="{StaticResource UnknownTemplate}"
        SentTemplate="{StaticResource SentTemplate}"
        ReceivedTemplate="{StaticResource ReceivedTemplate}"
        SwapPaymentTemplate="{StaticResource SwapPaymentTemplate}"
        SwapRedeemTemplate="{StaticResource SwapRedeemTemplate}"
        SwapRefundTemplate="{StaticResource SwapRefundTemplate}"/>

    <DataTemplate x:Key="TransactionDetailsTemplate"
                  DataType="viewModels:TransactionViewModel">
        <subViews:TransactionDetailsView/>
    </DataTemplate>

    <DataTemplate x:Key="BitcoinBasedTransactionDetailsTemplate"
                  DataType="viewModels:BitcoinBasedTransactionViewModel">
        <subViews:TransactionDetailsView/>
    </DataTemplate>

    <DataTemplate x:Key="TezosTransactionDetailsTemplate"
                  DataType="viewModels:TezosTransactionViewModel">
        <subViews:TezosTransactionDetailsView/>
    </DataTemplate>

    <DataTemplate x:Key="EthereumTransactionDetailsTemplate"
                  DataType="viewModels:EthereumTransactionViewModel">
        <subViews:EthereumTransactionDetailsView/>
    </DataTemplate>

    <controls:TransactionDataTemplateByCurrencySelector x:Key="TransactionDetailsDataTemplateSelector">
        <controls:TransactionDataTemplateByCurrencySelector.Selectors>
            <controls:TransactionDataTemplateSelectorList>
                <controls:TransactionDataTemplateSelector
                    Currency="BTC"
                    UnknownTemplate="{StaticResource BitcoinBasedTransactionDetailsTemplate}"
                    SentTemplate="{StaticResource BitcoinBasedTransactionDetailsTemplate}"
                    ReceivedTemplate="{StaticResource BitcoinBasedTransactionDetailsTemplate}"
                    SwapPaymentTemplate="{StaticResource BitcoinBasedTransactionDetailsTemplate}"
                    SwapRedeemTemplate="{StaticResource BitcoinBasedTransactionDetailsTemplate}"
                    SwapRefundTemplate="{StaticResource BitcoinBasedTransactionDetailsTemplate}"/>
                <controls:TransactionDataTemplateSelector
                    Currency="LTC"
                    UnknownTemplate="{StaticResource BitcoinBasedTransactionDetailsTemplate}"
                    SentTemplate="{StaticResource BitcoinBasedTransactionDetailsTemplate}"
                    ReceivedTemplate="{StaticResource BitcoinBasedTransactionDetailsTemplate}"
                    SwapPaymentTemplate="{StaticResource BitcoinBasedTransactionDetailsTemplate}"
                    SwapRedeemTemplate="{StaticResource BitcoinBasedTransactionDetailsTemplate}"
                    SwapRefundTemplate="{StaticResource BitcoinBasedTransactionDetailsTemplate}"/>
                <controls:TransactionDataTemplateSelector
                    Currency="ETH"
                    UnknownTemplate="{StaticResource EthereumTransactionDetailsTemplate}"
                    SentTemplate="{StaticResource EthereumTransactionDetailsTemplate}"
                    ReceivedTemplate="{StaticResource EthereumTransactionDetailsTemplate}"
                    SwapPaymentTemplate="{StaticResource EthereumTransactionDetailsTemplate}"
                    SwapRedeemTemplate="{StaticResource EthereumTransactionDetailsTemplate}"
                    SwapRefundTemplate="{StaticResource EthereumTransactionDetailsTemplate}"/>
                <controls:TransactionDataTemplateSelector
                    Currency="XTZ"
                    UnknownTemplate="{StaticResource TezosTransactionDetailsTemplate}"
                    SentTemplate="{StaticResource TezosTransactionDetailsTemplate}"
                    ReceivedTemplate="{StaticResource TezosTransactionDetailsTemplate}"
                    SwapPaymentTemplate="{StaticResource TezosTransactionDetailsTemplate}"
                    SwapRedeemTemplate="{StaticResource TezosTransactionDetailsTemplate}"
                    SwapRefundTemplate="{StaticResource TezosTransactionDetailsTemplate}"/>
                <!-- todo: default data template -->
            </controls:TransactionDataTemplateSelectorList>
        </controls:TransactionDataTemplateByCurrencySelector.Selectors>
    </controls:TransactionDataTemplateByCurrencySelector>

    <DataTemplate x:Key="UnknownStateTemplate" DataType="viewModels:TransactionViewModel">
        <Border Background="{StaticResource UnknownBrush}" CornerRadius="5" Margin="3 0 3 0" HorizontalAlignment="Center">
            <TextBlock Foreground="White" Text="{Binding State}" FontSize="11" Margin="5 3 5 3" HorizontalAlignment="Center"/>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="PendingStateTemplate" DataType="viewModels:TransactionViewModel">
        <Border Background="{StaticResource PendingBrush}" CornerRadius="5" Margin="3 0 3 0" HorizontalAlignment="Center">
            <TextBlock Foreground="White" Text="{Binding State}" FontSize="11" Margin="5 3 5 3" HorizontalAlignment="Center"/>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ConfirmedStateTemplate" DataType="viewModels:TransactionViewModel">
        <Border Background="{StaticResource ConfirmedBrush}" CornerRadius="5" Margin="3 0 3 0" HorizontalAlignment="Center">
            <TextBlock Foreground="White" Text="{Binding State}" FontSize="11" Margin="5 3 5 3" HorizontalAlignment="Center"/>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="UnconfirmedStateTemplate" DataType="viewModels:TransactionViewModel">
        <Border Background="{StaticResource UnconfirmedBrush}" CornerRadius="5" Margin="3 0 3 0" HorizontalAlignment="Center">
            <TextBlock Foreground="White" Text="{Binding State}" FontSize="11" Margin="5 3 5 3" HorizontalAlignment="Center"/>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="FailedStateTemplate" DataType="viewModels:TransactionViewModel">
        <Border Background="{StaticResource FailedBrush}" CornerRadius="5" Margin="3 0 3 0" HorizontalAlignment="Center">
            <TextBlock Foreground="White" Text="{Binding State}" FontSize="11" Margin="5 3 5 3" HorizontalAlignment="Center"/>
        </Border>
    </DataTemplate>

    <controls:TransactionStateDataTemplateSelector x:Key="TransactionStateDataTemplateSelector"
        UnknownTemplate="{StaticResource UnknownStateTemplate}"
        PendingTemplate="{StaticResource PendingStateTemplate}"
        ConfirmedTemplate="{StaticResource ConfirmedStateTemplate}"
        UnconfirmedTemplate="{StaticResource UnconfirmedStateTemplate}"
        FailedTemplate="{StaticResource FailedStateTemplate}"/>

    <Style x:Key="WalletMenuButton"
           BasedOn="{StaticResource DefaultRoundedButtonStyle}"
           TargetType="{x:Type controls:RoundedButton}">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

</ResourceDictionary>