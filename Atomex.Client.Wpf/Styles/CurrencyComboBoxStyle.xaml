<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Atomex.Client.Wpf.Converters"
                    xmlns:abstractViewModels="clr-namespace:Atomex.Client.Wpf.ViewModels.Abstract">

    <!--<ControlTemplate x:Key="CurrencyComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" 
                    Grid.ColumnSpan="2"
                    CornerRadius="7"
                    Background="Transparent"
                    BorderBrush="DarkGray"
                    BorderThickness="2" />
            <Path x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="DarkGray"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,3 L6,9 L12,3 L12,0 L6,6 z" />
            --><!-- Data="M0,0 L0,4 L8,12 L16,4 L16,0 L8,8 z" --><!--
        </Grid>
        --><!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>--><!--
    </ControlTemplate>-->

    <!--<ControlTemplate x:Key="CurrencyComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="{TemplateBinding Background}" />
    </ControlTemplate>-->

    <converters:StringToUpperCaseConverter x:Key="StringToUpperCaseConverter"/>
    <converters:AmountToStringConverter x:Key="AmountToStringConverter"/>

    <DataTemplate x:Key="CurrencyItemTemplate" DataType="{x:Type abstractViewModels:CurrencyViewModel}">
        <Grid Margin="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="48"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <Grid.RowDefinitions>
                <RowDefinition Height="26"/>
                <RowDefinition Height="22"/>
            </Grid.RowDefinitions>

            <Image Width="48"
                   Height="48"
                   Source="{Binding IconPath}"
                   Grid.Column="0"
                   Grid.RowSpan="2"/>
            
            <TextBlock Text="{Binding Header, Converter={StaticResource StringToUpperCaseConverter}}"
                       FontFamily="{StaticResource RobotoBold}"
                       FontWeight="Bold"
                       FontSize="16"
                       Foreground="{StaticResource DefaultForegroundBrush}"
                       Margin="7 0 0 0"
                       VerticalAlignment="Bottom"
                       Grid.Column="1"
                       Grid.Row="0"/>

            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Top"
                        Grid.Column="1"
                        Grid.Row="1">
                <TextBlock FontFamily="{StaticResource Roboto}"
                           FontSize="13"
                           Foreground="{StaticResource DefaultForegroundBrush}"
                           Margin="7 0 0 0">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                            <Binding Path="TotalAmount" Mode="OneWay"/>
                            <Binding Path="CurrencyFormat" Mode="OneWay"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text="{Binding CurrencyCode}"
                           FontFamily="{StaticResource Roboto}"
                           FontSize="9"
                           Foreground="{StaticResource DefaultForegroundBrush}"
                           Margin="4 3 0 0" />
            </StackPanel>
        </Grid>
    </DataTemplate>    

    <!--<Style x:Key="CurrencyComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"/>
        <Setter Property="ItemTemplate" Value="{StaticResource CurrencyItemTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Name="ToggleButton" 
                                      Template="{StaticResource CurrencyComboBoxToggleButton}" 
                                      Focusable="false"
                                      IsChecked="{Binding IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3 3 23 3"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}" 
                                 Template="{StaticResource CurrencyComboBoxTextBox}" 
                                 HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" 
                                 Margin="3 3 23 3"
                                 Focusable="True" 
                                 Background="#FF3F3F3F"
                                 Foreground="Green"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" 
                               Focusable="False"
                               PopupAnimation="Slide">

                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="Transparent"
                                        BorderThickness="1"
                                        BorderBrush="Gray"/>
                                <ScrollViewer Margin="1 1 1 1" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="CurrencyComboBox" TargetType="ComboBox" BasedOn="{StaticResource CustomComboBox}">
        <Setter Property="ItemTemplate" Value="{StaticResource CurrencyItemTemplate}"/>
        <Setter Property="Background" Value="{StaticResource DefaultSubstrateBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"/>
    </Style>

</ResourceDictionary>