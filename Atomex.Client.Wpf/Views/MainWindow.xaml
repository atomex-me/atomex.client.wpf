<controls:MetroWindow x:Class="Atomex.Client.Wpf.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:views="clr-namespace:Atomex.Client.Wpf.Views"
        xmlns:viewModels="clr-namespace:Atomex.Client.Wpf.ViewModels"
        xmlns:customControls="clr-namespace:Atomex.Client.Wpf.Controls"
        mc:Ignorable="d"
        Title="atomex"
        Width="1000"
        Height="800"
        Icon="pack://application:,,,/Atomex.Client.Wpf;component/Resources/Images/logo.png"
        Style="{StaticResource MainWindowStyle}"
        d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel, IsDesignTimeCreatable=True}">

    <controls:MetroWindow.Resources>
        <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"/>
    </controls:MetroWindow.Resources>

    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button x:Name="btnUpdate"
                    Command="{Binding UpdateCommand}"
                    Foreground="Gold"
                    Visibility="{Binding UpdatesReady, Converter={StaticResource bool2VisibilityConverter}}">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <controls:ContentControlEx x:Name="PART_ContentControlEx"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Content="{TemplateBinding Content}"
                                       ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                       RecognizesAccessKey="True"
                                       Opacity="1"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
                        <Setter Property="Foreground" Value="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type controls:WindowCommands}}}" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="8 0 8 0" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource GrayBrush4}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="opacityPulse">
                                        <Storyboard TargetProperty="Opacity">
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:2" RepeatBehavior="Forever">
                                                <EasingDoubleKeyFrame KeyTime="85%" Value="0.35">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseOut"></ExponentialEase>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="100%" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseOut"></ExponentialEase>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="opacityPulse" />
                                </Trigger.EnterActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconModern Margin="0 0 3 0"
                                              Width="16"
                                              Height="16"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Kind="Refresh" />
                    <TextBlock VerticalAlignment="Center"
                               Text="Update Atomex" />
                </StackPanel>
            </Button>
            <Button Command="{Binding SignOutCommand}"
                    Visibility="{Binding HasAccount, Converter={StaticResource bool2VisibilityConverter}}">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterial Margin="0 0 3 0"
                                                Width="16"
                                                Height="16"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Kind="Logout"/>
                    <TextBlock VerticalAlignment="Center"
                               Text="SignOut"/>
                </StackPanel>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <DockPanel x:Name="MainDockerPanel">
        <StatusBar DockPanel.Dock="Bottom"
                   Background="{StaticResource MainWindowTitleBrush}">
            <StatusBarItem DockPanel.Dock="Left">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Version:" Margin="2px 0 4px 0"
                               FontSize="11"
                               Foreground="{StaticResource StatusBarDisconnectedForeground}"/>
                    <TextBlock Text="{Binding Path=InstalledVersion}"
                               FontSize="11"
                               Foreground="{StaticResource StatusBarDisconnectedForeground}" />
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem DockPanel.Dock="Right">
                <TextBlock Text="Exchange"
                           FontSize="11">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsExchangeConnected}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarConnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Connected"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsExchangeConnected}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarDisconnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Disconnected"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StatusBarItem>
            <Separator DockPanel.Dock="Right"/>
            <StatusBarItem DockPanel.Dock="Right">
                <TextBlock Text="Market Data"
                           FontSize="11">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMarketDataConnected}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarConnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Connected"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsMarketDataConnected}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarDisconnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Disconnected"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StatusBarItem>
            <Separator DockPanel.Dock="Right"/>
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Text="Rates Provider"
                           FontSize="11">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsQuotesProviderAvailable}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarConnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Available"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsQuotesProviderAvailable}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource StatusBarDisconnectedForeground}"/>
                                    <Setter Property="ToolTip" Value="Not available"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>
        
        <ContentControl Visibility="Collapsed" Content="{StaticResource ProxyElement}"/>
        
        <controls:HamburgerMenu
            Style="{StaticResource HamburgerMenuStyle}"
            SelectedIndex="{Binding SelectedMenuIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            HamburgerVisibility="Collapsed"
            HamburgerHeight="20"
            IsPaneOpen="True"
            Visibility="{Binding HasAccount, Converter={StaticResource BooleanToVisibilityConverter}}">
            <controls:HamburgerMenu.ItemsSource>
                <customControls:NavigationMenuItemCollection>
                    <customControls:NavigationMenuItem Header="Portfolio">
                        <customControls:NavigationMenuItem.Icon>
                            <iconPacks:PackIconMaterial Kind="ChartPie" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </customControls:NavigationMenuItem.Icon>
                        <customControls:NavigationMenuItem.Content>
                            <views:PortfolioView DataContext="{Binding Path=DataContext.PortfolioViewModel, Source={StaticResource ProxyElement}}"/>
                        </customControls:NavigationMenuItem.Content>
                    </customControls:NavigationMenuItem>

                    <customControls:NavigationMenuItem Header="Wallets">
                        <customControls:NavigationMenuItem.Icon>
                            <iconPacks:PackIconMaterial Kind="Wallet" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </customControls:NavigationMenuItem.Icon>
                        <customControls:NavigationMenuItem.Content>
                            <views:WalletsView DataContext="{Binding Path=DataContext.WalletsViewModel, Source={StaticResource ProxyElement}}"/>
                        </customControls:NavigationMenuItem.Content>
                    </customControls:NavigationMenuItem>

                    <customControls:NavigationMenuItem Header="Conversion">
                        <customControls:NavigationMenuItem.Icon>
                            <!--<iconPacks:PackIconOcticons Kind="Sync" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
                            <Image Width="24" Height="24" Source="pack://application:,,,/Atomex.Client.Wpf;component/Resources/Images/exchanged.png"/>
                        </customControls:NavigationMenuItem.Icon>
                        <customControls:NavigationMenuItem.Content>
                            <views:ConversionView DataContext="{Binding Path=DataContext.ConversionViewModel, Source={StaticResource ProxyElement}}"/>
                        </customControls:NavigationMenuItem.Content>
                    </customControls:NavigationMenuItem>

                    <!--<controls:NavigationMenuItem Header="Charts">
                        <controls:NavigationMenuItem.Icon>
                            <iconPacks:PackIconEntypo Kind="LineGraph" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </controls:NavigationMenuItem.Icon>
                        <controls:NavigationMenuItem.Content>
                            -->
                    <!--<Grid>
                                <Image Source="pack://application:,,,/Atomex.Client.Wpf;component/Resources/Images/under_construction.png"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Width="200"
                                       Height="200"/>
                            </Grid>-->
                    <!--
                            <views:ExchangeView DataContext="{Binding Path=DataContext.ExchangeViewModel, Source={StaticResource ProxyElement}}"/>
                        </controls:NavigationMenuItem.Content>
                    </controls:NavigationMenuItem>-->

                </customControls:NavigationMenuItemCollection>
            </controls:HamburgerMenu.ItemsSource>

            <controls:HamburgerMenu.OptionsItemsSource>
                <customControls:NavigationMenuItemCollection>

                    <customControls:NavigationMenuItem Header="Settings">
                        <customControls:NavigationMenuItem.Icon>
                            <iconPacks:PackIconOcticons Kind="Gear" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </customControls:NavigationMenuItem.Icon>
                        <customControls:NavigationMenuItem.Content>
                            <!--<Grid>
                                <Image Source="pack://application:,,,/Atomex.Client.Wpf;component/Resources/Images/under_construction.png"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Width="200"
                                       Height="200"/>
                            </Grid>-->
                            <views:SettingsView DataContext="{Binding Path=DataContext.SettingsViewModel, Source={StaticResource ProxyElement}}"/>
                        </customControls:NavigationMenuItem.Content>
                    </customControls:NavigationMenuItem>

                    <!--<controls:NavigationMenuItem Header="Help">
                        <controls:NavigationMenuItem.Icon>
                            <iconPacks:PackIconMaterial Kind="HelpCircle" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </controls:NavigationMenuItem.Icon>
                    </controls:NavigationMenuItem>-->

                </customControls:NavigationMenuItemCollection>
            </controls:HamburgerMenu.OptionsItemsSource>
        </controls:HamburgerMenu>
    </DockPanel>
</controls:MetroWindow>