//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Atomex.Client.Wpf.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Atomex.Client.Wpf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have active swaps. Closing the application or sign out may result in loss of funds as a result of the failore of the refund operation. Are you sure you want to close the application?.
        /// </summary>
        public static string ActiveSwapsWarning {
            get {
                return ResourceManager.GetString("ActiveSwapsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Conversion error. Please contant technical support..
        /// </summary>
        public static string CvConversionError {
            get {
                return ResourceManager.GetString("CvConversionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        public static string CvError {
            get {
                return ResourceManager.GetString("CvError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Insufficient funds.
        /// </summary>
        public static string CvInsufficientFunds {
            get {
                return ResourceManager.GetString("CvInsufficientFunds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The amount must be greater than or equal to the minimum allowed amount {0} {1}..
        /// </summary>
        public static string CvMinimumAllowedQtyWarning {
            get {
                return ResourceManager.GetString("CvMinimumAllowedQtyWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not enough liquidity to convert a specified amount..
        /// </summary>
        public static string CvNoLiquidity {
            get {
                return ResourceManager.GetString("CvNoLiquidity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This symbol does not support direct conversion..
        /// </summary>
        public static string CvNotSupportedSymbol {
            get {
                return ResourceManager.GetString("CvNotSupportedSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Standard.
        /// </summary>
        public static string CvOrderTypeStandard {
            get {
                return ResourceManager.GetString("CvOrderTypeStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Standard With Fixed Fee.
        /// </summary>
        public static string CvOrderTypeStandardWithFixedFee {
            get {
                return ResourceManager.GetString("CvOrderTypeStandardWithFixedFee", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Atomex services unavailable. Please check your network connection or contact technical support..
        /// </summary>
        public static string CvServicesUnavailable {
            get {
                return ResourceManager.GetString("CvServicesUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wallet locked. Please unlock the wallet to continue..
        /// </summary>
        public static string CvWalletLocked {
            get {
                return ResourceManager.GetString("CvWalletLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning.
        /// </summary>
        public static string CvWarning {
            get {
                return ResourceManager.GetString("CvWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Amount to convert must be greater than zero..
        /// </summary>
        public static string CvWrongAmount {
            get {
                return ResourceManager.GetString("CvWrongAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Back.
        /// </summary>
        public static string CwvBack {
            get {
                return ResourceManager.GetString("CwvBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        public static string CwvCancel {
            get {
                return ResourceManager.GetString("CwvCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Generate and write down the mnemonic before continuing!.
        /// </summary>
        public static string CwvCreateMnemonicWarning {
            get {
                return ResourceManager.GetString("CwvCreateMnemonicWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wallet name must be not empty..
        /// </summary>
        public static string CwvEmptyWalletName {
            get {
                return ResourceManager.GetString("CwvEmptyWalletName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Finish.
        /// </summary>
        public static string CwvFinish {
            get {
                return ResourceManager.GetString("CwvFinish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid wallet name..
        /// </summary>
        public static string CwvInvalidWalletName {
            get {
                return ResourceManager.GetString("CwvInvalidWalletName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid mnemonic phrase..
        /// </summary>
        public static string CwvMnemonicInvalidError {
            get {
                return ResourceManager.GetString("CwvMnemonicInvalidError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Word count should be 12,15,18,21 or 24..
        /// </summary>
        public static string CwvMnemonicInvalidWordcountError {
            get {
                return ResourceManager.GetString("CwvMnemonicInvalidWordcountError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Word {0} is not in the wordlist for this language..
        /// </summary>
        public static string CwvMnemonicInvalidWordError {
            get {
                return ResourceManager.GetString("CwvMnemonicInvalidWordError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mnemonic phrase can not be empty..
        /// </summary>
        public static string CwvMnemonicIsEmptyError {
            get {
                return ResourceManager.GetString("CwvMnemonicIsEmptyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Next.
        /// </summary>
        public static string CwvNext {
            get {
                return ResourceManager.GetString("CwvNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password has insufficient complexity..
        /// </summary>
        public static string CwvPasswordInsufficientComplexity {
            get {
                return ResourceManager.GetString("CwvPasswordInsufficientComplexity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Passwords do not match..
        /// </summary>
        public static string CwvPasswordsDoNotMatch {
            get {
                return ResourceManager.GetString("CwvPasswordsDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scan.
        /// </summary>
        public static string CwvScan {
            get {
                return ResourceManager.GetString("CwvScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scan All.
        /// </summary>
        public static string CwvScanAll {
            get {
                return ResourceManager.GetString("CwvScanAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wallet with the same name already exists..
        /// </summary>
        public static string CwvWalletAlreadyExists {
            get {
                return ResourceManager.GetString("CwvWalletAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No tokens.
        /// </summary>
        public static string PwNoTokens {
            get {
                return ResourceManager.GetString("PwNoTokens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Amount must be greater than zero..
        /// </summary>
        public static string SvAmountLessThanZeroError {
            get {
                return ResourceManager.GetString("SvAmountLessThanZeroError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The transfer amount {0} with estimated commission {1} exceeds the amount of available funds!.
        /// </summary>
        public static string SvAvailableFundsDetailedError {
            get {
                return ResourceManager.GetString("SvAvailableFundsDetailedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The transfer amount (including commission) exceeds the amount of available funds!.
        /// </summary>
        public static string SvAvailableFundsError {
            get {
                return ResourceManager.GetString("SvAvailableFundsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Back.
        /// </summary>
        public static string SvBack {
            get {
                return ResourceManager.GetString("SvBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        public static string SvCancel {
            get {
                return ResourceManager.GetString("SvCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Commission must be a positive value..
        /// </summary>
        public static string SvCommissionLessThanZeroError {
            get {
                return ResourceManager.GetString("SvCommissionLessThanZeroError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Address must be not empty..
        /// </summary>
        public static string SvEmptyAddressError {
            get {
                return ResourceManager.GetString("SvEmptyAddressError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        public static string SvError {
            get {
                return ResourceManager.GetString("SvError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed.
        /// </summary>
        public static string SvFailed {
            get {
                return ResourceManager.GetString("SvFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gas limit:.
        /// </summary>
        public static string SvGasLimit {
            get {
                return ResourceManager.GetString("SvGasLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Insufficient funds for default fee..
        /// </summary>
        public static string SvInsufficientFundsForDefaultFeeError {
            get {
                return ResourceManager.GetString("SvInsufficientFundsForDefaultFeeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Address is invalid..
        /// </summary>
        public static string SvInvalidAddressError {
            get {
                return ResourceManager.GetString("SvInvalidAddressError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mining fee:.
        /// </summary>
        public static string SvMiningFee {
            get {
                return ResourceManager.GetString("SvMiningFee", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No.
        /// </summary>
        public static string SvNo {
            get {
                return ResourceManager.GetString("SvNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ok.
        /// </summary>
        public static string SvOk {
            get {
                return ResourceManager.GetString("SvOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Swap successfully created.
        ///
        ///NOTE: Do not sign out or close the application until the swap is completed, otherwise it may result in a loss of funds..
        /// </summary>
        public static string SvOrderMatched {
            get {
                return ResourceManager.GetString("SvOrderMatched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Order rejected..
        /// </summary>
        public static string SvOrderRejected {
            get {
                return ResourceManager.GetString("SvOrderRejected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Oops, the price has changed during the order sending. Please try again..
        /// </summary>
        public static string SvPriceHasChanged {
            get {
                return ResourceManager.GetString("SvPriceHasChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Send.
        /// </summary>
        public static string SvSend {
            get {
                return ResourceManager.GetString("SvSend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Send Confirmation.
        /// </summary>
        public static string SvSendConfirmation {
            get {
                return ResourceManager.GetString("SvSendConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sending....
        /// </summary>
        public static string SvSending {
            get {
                return ResourceManager.GetString("SvSending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Success.
        /// </summary>
        public static string SvSuccess {
            get {
                return ResourceManager.GetString("SvSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Atomex is not responding for a long time..
        /// </summary>
        public static string SvTimeoutReached {
            get {
                return ResourceManager.GetString("SvTimeoutReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Yes.
        /// </summary>
        public static string SvYes {
            get {
                return ResourceManager.GetString("SvYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning.
        /// </summary>
        public static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
    }
}
