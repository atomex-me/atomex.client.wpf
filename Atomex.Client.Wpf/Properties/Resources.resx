<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CwvBack" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="CwvCreateMnemonicWarning" xml:space="preserve">
    <value>Generate and write down the mnemonic before continuing!</value>
  </data>
  <data name="CwvFinish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="CwvMnemonicInvalidError" xml:space="preserve">
    <value>Invalid mnemonic phrase.</value>
  </data>
  <data name="CwvMnemonicInvalidWordcountError" xml:space="preserve">
    <value>Word count should be 12,15,18,21 or 24.</value>
  </data>
  <data name="CwvMnemonicInvalidWordError" xml:space="preserve">
    <value>Word {0} is not in the wordlist for this language.</value>
  </data>
  <data name="CwvMnemonicIsEmptyError" xml:space="preserve">
    <value>Mnemonic phrase can not be empty.</value>
  </data>
  <data name="CwvNext" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="CwvPasswordInsufficientComplexity" xml:space="preserve">
    <value>Password has insufficient complexity.</value>
  </data>
  <data name="CwvPasswordsDoNotMatch" xml:space="preserve">
    <value>Passwords do not match.</value>
  </data>
  <data name="CwvScan" xml:space="preserve">
    <value>Scan</value>
  </data>
  <data name="CwvCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CwvScanAll" xml:space="preserve">
    <value>Scan All</value>
  </data>
  <data name="SvSend" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="SvSendConfirmation" xml:space="preserve">
    <value>Send Confirmation</value>
  </data>
  <data name="SvYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="SvAmountLessThanZeroError" xml:space="preserve">
    <value>Amount must be greater than zero.</value>
  </data>
  <data name="SvAvailableFundsError" xml:space="preserve">
    <value>The transfer amount (including commission) exceeds the amount of available funds!</value>
  </data>
  <data name="SvAvailableFundsDetailedError" xml:space="preserve">
    <value>The transfer amount {0} with estimated commission {1} exceeds the amount of available funds!</value>
  </data>
  <data name="SvCommissionLessThanZeroError" xml:space="preserve">
    <value>Commission must be a positive value.</value>
  </data>
  <data name="SvInsufficientFundsForDefaultFeeError" xml:space="preserve">
    <value>Insufficient funds for default fee.</value>
  </data>
  <data name="SvEmptyAddressError" xml:space="preserve">
    <value>Address must be not empty.</value>
  </data>
  <data name="SvInvalidAddressError" xml:space="preserve">
    <value>Address is invalid.</value>
  </data>
  <data name="SvBack" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="SvCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="SvError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="SvNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="SvOk" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="SvSending" xml:space="preserve">
    <value>Sending...</value>
  </data>
  <data name="SvSuccess" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="CvOrderTypeStandard" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="CvOrderTypeStandardWithFixedFee" xml:space="preserve">
    <value>Standard With Fixed Fee</value>
  </data>
  <data name="CwvEmptyWalletName" xml:space="preserve">
    <value>Wallet name must be not empty.</value>
  </data>
  <data name="CwvInvalidWalletName" xml:space="preserve">
    <value>Invalid wallet name.</value>
  </data>
  <data name="CwvWalletAlreadyExists" xml:space="preserve">
    <value>Wallet with the same name already exists.</value>
  </data>
  <data name="CvConversionError" xml:space="preserve">
    <value>Conversion error. Please contant technical support.</value>
  </data>
  <data name="CvError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="CvServicesUnavailable" xml:space="preserve">
    <value>Atomex services unavailable. Please check your network connection or contact technical support.</value>
  </data>
  <data name="CvWalletLocked" xml:space="preserve">
    <value>Wallet locked. Please unlock the wallet to continue.</value>
  </data>
  <data name="CvWarning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="CvWrongAmount" xml:space="preserve">
    <value>Amount to convert must be greater than zero.</value>
  </data>
  <data name="CvNoLiquidity" xml:space="preserve">
    <value>Not enough liquidity to convert a specified amount.</value>
  </data>
  <data name="SvGasLimit" xml:space="preserve">
    <value>Gas limit:</value>
  </data>
  <data name="SvMiningFee" xml:space="preserve">
    <value>Mining fee:</value>
  </data>
  <data name="CvNotSupportedSymbol" xml:space="preserve">
    <value>This symbol does not support direct conversion.</value>
  </data>
  <data name="PwNoTokens" xml:space="preserve">
    <value>No tokens</value>
  </data>
  <data name="CvInsufficientFunds" xml:space="preserve">
    <value>Insufficient funds</value>
  </data>
  <data name="CvMinimumAllowedQtyWarning" xml:space="preserve">
    <value>The amount must be greater than or equal to the minimum allowed amount {0} {1}.</value>
  </data>
  <data name="SvFailed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="SvOrderMatched" xml:space="preserve">
    <value>Swap successfully created.

NOTE: Do not sign out or close the application until the swap is completed, otherwise it may result in a loss of funds.</value>
  </data>
  <data name="SvOrderRejected" xml:space="preserve">
    <value>Order rejected.</value>
  </data>
  <data name="SvPriceHasChanged" xml:space="preserve">
    <value>Oops, the price has changed during the order sending. Please try again.</value>
  </data>
  <data name="SvTimeoutReached" xml:space="preserve">
    <value>Atomex is not responding for a long time.</value>
  </data>
  <data name="ActiveSwapsWarning" xml:space="preserve">
    <value>You have active swaps. Closing the application or sign out may result in loss of funds as a result of the failore of the refund operation. Are you sure you want to close the application?</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
</root>