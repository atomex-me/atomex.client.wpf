<?xml version="1.0" encoding="UTF-8"?>

<?define Name = "Atomex Client" ?>
<?define Manufacturer = "Atomex.me" ?>
<?define Description = "Multicurrency HD wallet with built-in hybrid exchange based on atomic swap." ?>
<?define Version = "1.0.6" ?>
<?define UpgradeCode = "DB7FCF8D-E0C6-4C99-A6B1-3FB6D703F97E" ?>
<?define ExeName = "Atomex.Client.Wpf.exe" ?>

<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
		 xmlns:netfx="http://schemas.microsoft.com/wix/NetFxExtension">
	<Product Id="*" Language="1033" Name="$(var.Name)" Version="$(var.Version)" 
					 Manufacturer="$(var.Manufacturer)" UpgradeCode="$(var.UpgradeCode)">

		<Package InstallerVersion="400" Compressed="yes" Manufacturer="$(var.Manufacturer)"
						 Description="$(var.Description)" Comments="(c) 2018-2019 Atomex.me"
						 InstallPrivileges="limited" InstallScope="perUser" />

		<MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." />    
		<MediaTemplate EmbedCab="yes" />

		<Icon Id="AppIcon.exe" SourceFile="Resources/appicon.ico" />

		<Property Id="ARPPRODUCTICON" Value="AppIcon.exe" />
		<Property Id="ARPHELPLINK" Value="https://atomex.me/" />
		<Property Id="ARPNOREPAIR" Value="yes" Secure="yes" />
		<Property Id="ARPNOMODIFY" Value="yes" Secure="yes" />
		<Property Id="ALLUSERS" Secure="yes" Value="2" />
		<Property Id="MSIINSTALLPERUSER" Secure="yes" Value="1" />

		<SetProperty Id="ARPINSTALLLOCATION" Value="[INSTALLDIR]" After="CostFinalize" />

		<PropertyRef Id="NETFRAMEWORK45"/>
		<Condition Message="Please install .NET Framework 4.5">
				<![CDATA[Installed OR NETFRAMEWORK45]]>
		</Condition>
		
		<Condition Message="Windows 7 or higer is required">
				<![CDATA[Installed OR VersionNT >= 601]]>
		</Condition>

		<Directory Id="TARGETDIR" Name="SourceDir">
			<Directory Id="ProgramFilesFolder">
				<Directory Id="AppRootDirectory" Name="$(var.Manufacturer)">
					<Directory Id="INSTALLDIR" Name="$(var.Name)" />
				</Directory>
			</Directory>
      <Directory Id="ProgramMenuFolder">
        <Directory Id="ApplicationProgramsFolder" Name="$(var.Manufacturer)" />
      </Directory>
      <Directory Id="DesktopFolder" Name="Desktop" />
		</Directory>

    <!-- Start menu shortcut -->
    <DirectoryRef Id="ApplicationProgramsFolder">
      <Component Id="ApplicationShortcut" Guid="*">
        <Shortcut
          Id="ApplicationStartMenuShortcut"
          Name="$(var.Name)"
          Description="$(var.Description)"
          Target="[INSTALLDIR]Atomex.Client.Wpf.exe"
          WorkingDirectory="INSTALLDIR" />
        <RemoveFolder
          Id="ApplicationProgramsFolder"
          On="uninstall" />
        <RegistryValue
          Root="HKCU"
          Key="Software\$(var.Manufacturer)\$(var.Name)"
          Name="installed1"
          Type="integer"
          Value="1"
          KeyPath="yes" />
      </Component>
    </DirectoryRef>

    <!-- Desktop shortcut -->
    <DirectoryRef Id="DesktopFolder">
      <Component Id="ApplicationShortcutDesktop" Guid="*">
        <Shortcut
          Id="ApplicationDesktopShortcut"
          Name="$(var.Name)"
          Description="$(var.Description)"
          Target="[INSTALLDIR]Atomex.Client.Wpf.exe"
          WorkingDirectory="INSTALLDIR" />
        <RemoveFolder
          Id="DesktopFolder"
          On="uninstall" />
        <RegistryValue
          Root="HKCU"
          Key="Software\$(var.Manufacturer)\$(var.Name)"
          Name="installed2"
          Type="integer"
          Value="1"
          KeyPath="yes" />
      </Component>
    </DirectoryRef>

		<Feature Id="App" Title="$(var.Name)" Level="1">
      <ComponentGroupRef Id="App" />
      <ComponentRef Id="ApplicationShortcut" />
      <ComponentRef Id="ApplicationShortcutDesktop" />
    </Feature>
		
		<CustomAction Id="SetLaunchApp" Execute="immediate"
								 	Property="WixShellExecTarget" Value="&quot;[INSTALLDIR]Atomex.Client.Wpf.exe&quot;" />
		<CustomAction Id="LaunchApp" BinaryKey="WixCA" DllEntry="WixShellExec" Impersonate="yes" />

		<InstallExecuteSequence>
			<!--
				Run always except uninstall
				see https://stackoverflow.com/questions/320921/how-to-add-a-wix-custom-action-that-happens-only-on-uninstall-via-msi
			 -->
			<Custom Action="SetLaunchApp" Before="LaunchApp">
				<![CDATA[(REMOVE <> "ALL") AND (NOT UPGRADINGPRODUCTCODE)]]>				
			</Custom> 
  	 	<Custom Action="LaunchApp" After="InstallFinalize">
				<![CDATA[(REMOVE <> "ALL") AND (NOT UPGRADINGPRODUCTCODE)]]>
			</Custom> 
    </InstallExecuteSequence> 
	</Product>
</Wix>
